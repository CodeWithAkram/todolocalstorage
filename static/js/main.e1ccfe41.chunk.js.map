{"version":3,"sources":["todo/Todo.jsx","App.js","index.js"],"names":["Todo","useState","inputItem","setInputItem","lists","localStorage","getItem","JSON","parse","getLocalData","item","setItem","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItems","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","stringify","className","src","alt","type","value","placeholder","onChange","e","target","class","onClick","index","editdItems","find","editItem","updatedItems","filter","deleteItem","App","ReactDOM","render","document","getElementById"],"mappings":"gMA8HeA,EAlHF,WAET,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAZP,WACjB,IAAMG,EAAQC,aAAaC,QAAQ,aACnC,OAAIF,EACOG,KAAKC,MAAMJ,GAEX,GAOsBK,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCV,mBAAU,IAA9C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAEMC,EAAW,WACb,GAAKd,EAEE,GAAGA,GAAaY,EACnBH,EACID,EAAKO,KAAI,SAACC,GACN,OAAGA,EAAQC,KAAOP,EACP,2BAAIM,GAAX,IAAoBE,KAAMlB,IAEvBgB,MAGff,EAAa,IACbU,EAAc,IACdE,GAAgB,OAEb,CACH,IAAMM,EAAiB,CACnBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAGVS,EAAQ,GAAD,mBAAKD,GAAL,CAAWW,KAClBlB,EAAa,SArBbsB,MAAM,yBAkDd,OAJAC,qBAAU,WACNrB,aAAaM,QAAQ,YAAaJ,KAAKoB,UAAUjB,MAClD,CAACA,IAGA,qCACI,0BAASkB,UAAU,UAAnB,UACI,qBAAKA,UAAU,OAAf,SACI,iCAAQ,qBAAKC,IAAI,kBAAkBC,IAAI,aAE3C,sBAAKF,UAAU,WAAf,UAA0B,4DACtB,+BAAO1B,UAGf,uBAAM0B,UAAU,MAAhB,UACI,sBAAKA,UAAU,YAAf,UACI,uBACIG,KAAK,OACLX,KAAK,QACLD,GAAG,QACHS,UAAU,WACVI,MAAO9B,EACP+B,YAAY,2BACZC,SAAU,SAACC,GAAD,OAAOhC,EAAagC,EAAEC,OAAOJ,UAEzClB,EAAiB,mBAAGuB,MAAM,uBAAuBC,QAAStB,IAEvD,mBAAGqB,MAAM,uBAAuBC,QAAStB,OAKlD,qBAAKY,UAAU,aAAf,SAGQlB,EAAKO,KAAI,SAACC,GACN,OACI,sBAAKU,UAAU,iBAAf,UACKV,EAAQE,KACT,mBAAGiB,MAAM,uBACLC,QAAS,kBArD5B,SAACC,GACd,IAAMC,EAAa9B,EAAK+B,MAAK,SAACvB,GAC1B,OAAOA,EAAQC,KAAOoB,KAE1BpC,EAAaqC,EAAWpB,MACxBP,EAAc0B,GACdxB,GAAgB,GA+C+B2B,CAASxB,EAAQC,OACpC,mBAAGkB,MAAM,0BACLC,QAAS,kBA9D1B,SAACC,GAChB,IAAMI,EAAejC,EAAKkC,QAAO,SAAC1B,GAC9B,OAAOA,EAAQC,KAAOoB,KAE1B5B,EAAQgC,GA0DuCE,CAAW3B,EAAQC,KADtC,iBAJiCD,EAAQC,SAa7D,qBAAKS,UAAU,YAAf,SACI,wBAAQA,UAAU,SAASU,QAvDzB,WACd3B,EAAQ,KAsDI,iCCzGLmC,EATH,WACR,OACI,mCAEI,cAAC,EAAD,OCJZC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e1ccfe41.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './todo.css';\r\n\r\nconst getLocalData = () => {\r\n    const lists = localStorage.getItem(\"todooList\");\r\n    if (lists) {\r\n        return JSON.parse(lists);\r\n    } else  {\r\n        return [];\r\n    }\r\n}\r\n\r\nconst Todo = () => {\r\n\r\n    const [inputItem, setInputItem] = useState(\"\");\r\n    const [item, setItem] = useState(getLocalData());\r\n    const [isEditItem, setIsEditItem] = useState (\"\");\r\n    const [toggleButton, setToggleButton] = useState(false);\r\n\r\n    const addItems = () => {\r\n        if (!inputItem) {\r\n            alert('Please fill the item');\r\n        } else if(inputItem && toggleButton) {\r\n            setItem(\r\n                item.map((curElem) => {\r\n                    if(curElem.id === isEditItem) {\r\n                        return {...curElem, name: inputItem};\r\n                    }\r\n                    return curElem;\r\n                })\r\n            )\r\n            setInputItem(\"\");\r\n            setIsEditItem([]);\r\n            setToggleButton(false);\r\n\r\n        } else {\r\n            const myNewInputData = {\r\n                id: new Date().getTime().toString(),\r\n                name: inputItem,\r\n            };\r\n\r\n            setItem([...item, myNewInputData]);\r\n            setInputItem(\"\");\r\n        }\r\n\r\n    };\r\n\r\n    const deleteItem = (index) => {\r\n        const updatedItems = item.filter((curElem) => {\r\n            return curElem.id !== index;\r\n        });\r\n        setItem(updatedItems);\r\n    }\r\n\r\n    const editItem = (index) => {\r\n        const editdItems = item.find((curElem) => {\r\n            return curElem.id === index;\r\n        });\r\n        setInputItem(editdItems.name);\r\n        setIsEditItem(index);\r\n        setToggleButton(true);\r\n    }\r\n\r\n    const removeall = () => {\r\n        setItem([]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"todooList\", JSON.stringify(item));\r\n    }, [item]);\r\n\r\n    return (\r\n        <>\r\n            <section className=\"todoTop\">\r\n                <div className=\"logo\">\r\n                    <figure><img src=\"images/todo.svg\" alt=\"logo\" /></figure>\r\n                </div>\r\n                <div className=\"todoText\"><p>Add Your List üëç </p>\r\n                    <span>{inputItem}</span></div>\r\n            </section>\r\n\r\n            <main className=\"box\">\r\n                <div className=\"inputArea\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"items\"\r\n                        id=\"items\"\r\n                        className=\"addItems\"\r\n                        value={inputItem}\r\n                        placeholder=\"‚úçÔ∏è Add Item...\"\r\n                        onChange={(e) => setInputItem(e.target.value)}\r\n                    />\r\n                    { toggleButton ? ( <i class=\"fas fa-edit plusItem\" onClick={addItems}></i>\r\n                    ) : (\r\n                         <i class=\"fas fa-plus plusItem\" onClick={addItems}></i>)\r\n                    }\r\n                    \r\n                </div>\r\n\r\n                <div className=\"editDelete\">\r\n\r\n                    {\r\n                        item.map((curElem) => {\r\n                            return (\r\n                                <div className=\"editDeleteItem\" key={curElem.id}>\r\n                                    {curElem.name}\r\n                                    <i class=\"fas fa-edit editItem\"\r\n                                        onClick={() => editItem(curElem.id)}></i>\r\n                                    <i class=\"fas fa-trash deleteItem\"\r\n                                        onClick={() => deleteItem(curElem.id)}> </i>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n\r\n                <div className=\"deleteAll\">\r\n                    <button className=\"remove\" onClick={removeall}>Delete All</button>\r\n                </div>\r\n            </main>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\nimport Todo from './todo/Todo';\r\n// import Temp from './weather/Temp';\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            {/* <Temp /> */}\r\n            <Todo />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}